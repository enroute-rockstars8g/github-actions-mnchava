name: GitHub Actions without Docker

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: "jesus_uribe"
      POSTGRES_PASSWORD: 1701
      POSTGRES_HOST: "localhost"
      POSTGRES_DB: "jesus_uribedb"
      PORT: 19
      DJANGO_SECRET_KEY: test-key-not-good
    services:
      postgres_main:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5519:10019
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    # If you want to test multiple python version(s)
    strategy:
      matrix:
        python-version: ["3.10"] # ["3.8", "3.9", "3.10"]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: |
          pip install -r requirements.txt
      - name: Run Tests
        # Step specific environment variables
        env:
          DEBUG: "0"
          DJANGO_SECRET_KEY: ${{ env.DJANGO_SECRET_KEY }}
          DB_USERNAME: ${{ env.POSTGRES_USER }}
          DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          DB_HOST: ${{ env.POSTGRES_HOST }}
          DB_DATABASE: ${{ env.POSTGRES_DB }}
          DB_PORT: 5519
          JWT_TOKEN_TIME: 120
        run: |
          python manage.py test